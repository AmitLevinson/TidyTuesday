} else {
img <- image_resize(img, ("x80"))
}
# Create array and number rows and columns
img_array <- drop(as.integer(img[[1]]))
rownames(img_array) <- 1:nrow(img_array)
colnames(img_array) <- 1:ncol(img_array)
# Create data frame from array and rename columns
img_df <- as.data.frame.table(img_array) %>%
`colnames<-`(c("y", "x", "b")) %>%
mutate(
across(everything(), as.numeric),
# convert b (0-255) to bf (1-0), so that "brighter" values become smaller bars
bf = 1 - b / 255
)
# Colors, fill and background
col_fill <- "black"
col_bg <- "#F1E34C"
ggplot(img_df) +
geom_rect(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85), fill = col_fill, color = NA) +
scale_y_reverse() +
coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
week_40_b_t
img <- image_read("2020/week_40_b_t/b.jpg") %>%
image_convert(colorspace = "gray")
# Get dimensions
img_w <- image_info(img)$width
img_h <- image_info(img)$height
# Resize the longest dimension to 80 pixels
if (img_w >= img_h) {
img <- image_resize(img, "80")
} else {
img <- image_resize(img, ("x80"))
}
# Create array and number rows and columns
img_array <- drop(as.integer(img[[1]]))
rownames(img_array) <- 1:nrow(img_array)
colnames(img_array) <- 1:ncol(img_array)
# Create data frame from array and rename columns
img_df <- as.data.frame.table(img_array) %>%
`colnames<-`(c("y", "x", "b")) %>%
mutate(
across(everything(), as.numeric),
# convert b (0-255) to bf (1-0), so that "brighter" values become smaller bars
bf = 1 - b / 255
)
# Colors, fill and background
col_fill <- "black"
col_bg <- "#F1E34C"
ggplot(img_df) +
geom_rect(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85), fill = col_fill, color = NA) +
scale_y_reverse() +
coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
col_bg <- "white"
ggplot(img_df) +
geom_rect(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85), fill = col_fill, color = NA) +
scale_y_reverse() +
coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
# Colors, fill and background
col_fill <- "white"
col_bg <- "#F1E34C"
ggplot(img_df) +
geom_rect(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85), fill = col_fill, color = NA) +
scale_y_reverse() +
coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
ggplot(img_df) +
geom_text(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85, label = word), color = col_fill) +
scale_y_reverse() +
coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
ggplot(img_df) +
geom_text(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85, label = word), color = col_fill) +
#scale_y_reverse() +
#coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
ggplot(img_df) +
geom_text(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85, labels = word), color = col_fill) +
#scale_y_reverse() +
#coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
ggplot(img_df) +
geom_text(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85, label = word), color = col_fill) +
#scale_y_reverse() +
#coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
img_df
img_df %>%
mutate(word = b_words$word)
img_df$word <- b_words$word
word_vec <- b_words$word
nrow(img_df)
n_iterate <- nrow(img_df)
word_vec <- b_words$word
new_word_vec <- c(word_vec, sample(word_vec, size = n_iterate - length(word_vec), replace= FALSE)
new_word_vec
new_word_vec <- c(word_vec, sample(word_vec, size = n_iterate - length(word_vec), replace= FALSE))
new_word_vec
img_df$word <- new_word_vec
ggplot(img_df) +
geom_text(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85, label = word), color = col_fill) +
#scale_y_reverse() +
#coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
img_df
ggplot(img_df) +
geom_text(aes(xmin = x, xmax = x + bf * 0.9, ymin = y, ymax = y + 0.85, label = word), color = col_fill) +
#scale_y_reverse() +
#coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
ggplot(img_df) +
geom_text(aes(x = x, y = y, label = word), color = col_fill) +
#scale_y_reverse() +
#coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA)) +
ggsave("Amit.png")
ggplot(img_df) +
geom_text(aes(x = x, y = y, label = word), color = col_fill) +
#scale_y_reverse() +
#coord_fixed(expand = FALSE) +
theme_void() +
theme(legend.position = "none", plot.background = element_rect(fill = col_bg, color = NA))
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 3)
wordcloud2(words, figPath='/2020/week_40_b_t/b.jpg')
wordcloud2(b_words, figPath='/2020/week_40_b_t/b.jpg')
library(wordcloud2)
wordcloud2(b_words, figPath='/2020/week_40_b_t/b.jpg')
wordcloud2(b_words, figPath='2020/week_40_b_t/b.jpg')
wordcloud2(b_words, figPath='2020/week_40_b_t/b.jpg',size = 1.25)
attempt <- letterCloud(chat_total, word = "חג שמח", size =0.75)
wordcloud2(b_words, figPath='2020/week_40_b_t/b.jpg',size = 0.75)
wordcloud2(b_words, figPath='2020/week_40_b_t/b.jpg',size = 0.75)
wordcloud2(b_words, figPath='2020/week_40_b_t/b.jpg',size = 0.75, color = "brown")
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 10)
wordcloud2(b_words, figPath='2020/week_40_b_t/b.jpg',size = 0.75, color = "brown")
sales <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-29/sales.csv')
charts <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-29/charts.csv')
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 10)
t_words <- taylor_swift_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 10)
taylor_swift_lyrics
t_words <- taylor_swift_lyrics %>%
unnest_tokens(word, Lyrics) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 10)
t_words
b_words
t_words
b_words
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4)
t_words <- taylor_swift_lyrics %>%
unnest_tokens(word, Lyrics) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4)
t_words
b_words
t_words <- taylor_swift_lyrics %>%
unnest_tokens(word, Lyrics) %>%
count(word, sort = T) %>%
filter(n > 4)
t_words %>%
filter(word == "he")
t_words %>%
filter(word == "He")
t_words %>%
filter(word == "he")
t_words <- taylor_swift_lyrics %>%
unnest_tokens(word, Lyrics) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4)
install.packages("tidylo")
t_words <- taylor_swift_lyrics %>%
unnest_tokens(word, Lyrics) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4) %>%
mutate(person = "Swift")
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4) %>%
mutate(person = "Beyonce")
library(tidylo)
both_df <- rbind(b_words, t_words)
both_df
both_df <- rbind(b_words, t_words) %>%
bind_log_odds(set = person, feature = word, n =n)
words_wlo <- both_df %>%
group_by(person) %>%
top_n(10) %>%
ungroup() %>%
facet_bar(y = word, x = log_odds, by = person, ncol = 2) +
labs(title = "Top 10 words picked by weighted log odds")
both_df %>%
group_by(person) %>%
top_n(10) %>%
ungroup()
both_df %>%
group_by(person) %>%
top_n(15)
words_wlo <- both_df %>%
group_by(person) %>%
top_n(15) %>%
ungroup() %>%
mutate(log_odds_weighted = ifelse(person == "Swift", -n , n))
words_wlo
both_df %>%
group_by(person) %>%
top_n(15) %>%
ungroup() %>%
mutate(log_odds_weighted = ifelse(person == "Swift", -n , n))
both_df %>%
group_by(person) %>%
top_n(15) %>%
ungroup()
both_df %>%
group_by(person) %>%
top_n(15) %>%
ungroup() %>%
mutate(log_odds_weighted = ifelse(person == "Swift", -n , n)) %>% View()
both_df %>%
group_by(person) %>%
top_n(15) %>%
ungroup() %>%
mutate(log_odds_weighted = ifelse(person == "Swift", -log_odds_weighted , log_odds_weighted)) %>% View()
both_df <- rbind(b_words, t_words) %>%
bind_log_odds(set = person, feature = word, n =n) %>%
group_by(person) %>%
top_n(15) %>%
ungroup() %>%
mutate(log_odds_weighted = ifelse(person == "Swift", -log_odds_weighted , log_odds_weighted))
both_df %>%
ggplot()+
geom_col(x = log_odds_weighted, y = word)
both_df <- rbind(b_words, t_words) %>%
bind_log_odds(set = person, feature = word, n =n) %>%
group_by(person) %>%
top_n(15) %>%
ungroup() %>%
mutate(log_odds_weighted = ifelse(person == "Swift", -log_odds_weighted , log_odds_weighted))
both_df %>%
ggplot()+
geom_col(x = log_odds_weighted, y = word)
both_df
both_df %>%
ggplot()+
geom_col(aes(x = log_odds_weighted, y = word))
both_df <- rbind(b_words, t_words) %>%
bind_log_odds(set = person, feature = word, n =n) %>%
group_by(person) %>%
top_n(15) %>%
ungroup() %>%
mutate(log_odds_weighted = ifelse(person == "Swift", -log_odds_weighted , log_odds_weighted),
fct_reorder(word, log_odds_weighted))
both_df %>%
ggplot()+
geom_col(aes(x = log_odds_weighted, y = word))
both_df %>%
ggplot()+
geom_col(aes(x = log_odds_weighted, y = fct_reorder(word, log_odds_weighted)))
both_df %>%
ggplot()+
geom_col(aes(x = log_odds_weighted, y = fct_reorder(word, log_odds_weighted)))+
theme_light()
sales
both_df <- rbind(b_words, t_words) %>%
bind_log_odds(set = person, feature = word, n =n) %>%
group_by(person) %>%
top_n(12) %>%
ungroup() %>%
mutate(log_odds_weighted = ifelse(person == "Swift", -log_odds_weighted , log_odds_weighted),
fct_reorder(word, log_odds_weighted))
both_df %>%
ggplot()+
geom_col(aes(x = log_odds_weighted, y = fct_reorder(word, log_odds_weighted)))+
theme_light()
both_df %>%
ggplot()+
geom_col(aes(x = log_odds_weighted, y = fct_reorder(word, log_odds_weighted)))+
theme_void()
both_df %>%
ggplot()+
geom_col(aes(x = log_odds_weighted, y = fct_reorder(word, log_odds_weighted)))+
theme_minimal()
both_df %>%
ggplot()+
geom_col(aes(x = log_odds_weighted, y = fct_reorder(word, log_odds_weighted)))+
theme_minimal()+
theme(
panel.grid = element_blank()
)
charts
sales
sales
sales %>%
count(title)
sales
sales %>%
count(country)
sales %>%
count(country)
sales
charts
beyonce_lyrics
charts
charts
wordcloud2(b_words, figPath = "2020/week_40_b_t/mic.png", size = 1)
wordcloud2(b_words, figPath = "2020/week_40_b_t/mic2.png", size = 1)
wordcloud2(b_words, figPath = "2020/week_40_b_t/mic2.jpg", size = 1)
wordcloud2(b_words, figPath = "2020/week_40_b_t/mic3.png", size = 1)
wordcloud2(b_words, figPath = "2020/week_40_b_t/mic3.png", size = 1)
wordcloud2(b_words, figPath = "2020/week_40_b_t/mic3.png", size = 1.25)
wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.25)
wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.25, color = "black")
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.25, color = "black")
p2 <- both_df %>%
ggplot()+
geom_col(aes(x = log_odds_weighted, y = fct_reorder(word, log_odds_weighted)))+
theme_minimal()+
theme(
panel.grid = element_blank()
)
library(patchwork)
p + p2
p + p2
typeof(p2)
typeof(p)
p2
p
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 9) %>%
mutate(person = "Beyonce")
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.25, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 0.75, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.5, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
mutate(person = "Beyonce")
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.5, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4) %>%
mutate(person = "Beyonce")
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.5, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 0.35, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4) %>%
mutate(person = "Beyonce") %>%
mutate(n = ifelse(n> 600, n- 400, n))
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 0.35, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 0.8, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 9) %>%
mutate(person = "Beyonce") %>%
mutate(n = ifelse(n> 600, n- 400, n))
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 0.8, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 0.4, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 9) %>%
mutate(person = "Beyonce") %>%
mutate(n = ifelse(n> 600, n- 400, n),
n = n* 0.8)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 0.4, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 9) %>%
mutate(person = "Beyonce") %>%
mutate(
n = n* 0.8)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 0.4, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 0.8, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 2, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4) %>%
mutate(person = "Beyonce") %>%
mutate(
n = n* 0.8)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 2, color = "black")
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4) %>%
mutate(person = "Beyonce")
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 2, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4) %>%
mutate(person = "Beyonce") %>%
mutate(n = n* 0.8)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 2, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 3, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words
b_words <- beyonce_lyrics %>%
unnest_tokens(word, line) %>%
count(word, sort = T) %>%
anti_join(stop_words) %>%
filter(n > 4) %>%
mutate(person = "Beyonce") %>%
mutate(n = n* 0.8,
n = ifelse(n > 500, n - 300, n))
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 3, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 2.5, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words
p
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 2, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.5, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.75, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 2, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
p <- wordcloud2(b_words, figPath = "2020/week_40_b_t/note.png", size = 1.8, color = "black")
htmlwidgets::saveWidget(p,"1.html",selfcontained = F)
b_words
t_words
taylor_swift_lyrics
